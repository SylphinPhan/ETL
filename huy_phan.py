# -*- coding: utf-8 -*-
"""Huy phan

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1G5TghrzeAMfe_eJv59BpYkoVNrqfdqsW
"""

import pandas as pd
!pip install openpyxl
from sqlalchemy import create_engine
!pip install pymysql

"""#**EXTRACT**

## 1.1Enrollies
"""

google_sheet_id ="1VCkHwBjJGRJ21asd9pxW4_0z2PWuKhbLR3gUHm-p4GI"
url = 'https://docs.google.com/spreadsheets/d/' + google_sheet_id + '/export?format=xlsx'
Enrollies_df = pd.read_excel(url, sheet_name='enrollies')

"""##1.2Education"""

edu_df = pd.read_excel("/content/enrollies_education.xlsx")

"""##1.3Experience

"""

exp_df =pd.read_csv('https://assets.swisscoding.edu.vn/company_course/work_experience.csv')

"""## 1.4Hours"""

db_url ='mysql+pymysql://etl_practice:550814@112.213.86.31:3360/company_course'
engine = create_engine(db_url)

training_hours_df = pd.read_sql_table("training_hours", engine)

"""## 1.5City dev"""

page_url = "https://sca-programming-school.github.io/city_development_index/index.html"
city_dev_df = pd.read_html(page_url)[0]

"""## 1.6 Employ"""

db_url ='mysql+pymysql://etl_practice:550814@112.213.86.31:3360/company_course'
engine = create_engine(db_url)

epl_df = pd.read_sql_table("employment", engine)

"""# **TRANSFROM**

## 2.1Enrollies
"""

Enrollies_df.info()

# Fixing data type
Enrollies_df['full_name'] = Enrollies_df['full_name'].astype("string")
Enrollies_df['city'] = Enrollies_df['city'].astype("string")
# Missing data
Enrollies_df['gender'] = Enrollies_df['gender'].fillna(Enrollies_df['gender'].mode()[0])

#duplicate
Enrollies_df.duplicated().sum()

Enrollies_df['gender'] = Enrollies_df['gender'].astype("category")

Enrollies_df.info()

"""## 2.2Education"""

edu_df.info()

#Missingdata
edu_df["enrolled_university"] =edu_df["enrolled_university"].fillna("unknow")
edu_df["education_level"] =edu_df["education_level"].fillna("unknow")
edu_df["major_discipline"] =edu_df["major_discipline"].fillna("unknow")

#Fixing data type
cat_cols = ["enrolled_university","education_level","major_discipline"]
edu_df[cat_cols] = edu_df[cat_cols].astype("category")

"""##2.3Experience"""

exp_df.info()

exp_df['company_size'] = exp_df['company_size'].fillna("unknow")
exp_df['company_type'] = exp_df['company_type'].fillna("unknow")
exp_mode = exp_df["experience"].mode()[0]
exp_df['experience'] = exp_df['experience'].fillna(exp_mode)

cat_cols = ['relevent_experience', 'experience','company_size','company_type','last_new_job']
exp_df[cat_cols] = exp_df[cat_cols].astype("category")

"""##2.4Hours"""

training_hours_df.info()

"""##2.5City Dev"""

city_dev_df.info()

"""##2.6Employ"""

epl_df.info()

"""# **LOAD**"""

db = "data.db"
target_db_engine = create_engine("sqlite:///data.db")
epl_df.to_sql("Fact_epl",target_db_engine, if_exists="replace",index= False)
edu_df.to_sql("Dim_Edu",target_db_engine, if_exists="replace",index= False)
training_hours_df.to_sql("Dim_hours",target_db_engine, if_exists="replace",index= False)
exp_df.to_sql("Dim_exp",target_db_engine, if_exists="replace",index= False)
Enrollies_df.to_sql('Dim_Enroll',target_db_engine, if_exists="replace",index= False)
city_dev_df.to_sql("Dim_city_dev",target_db_engine, if_exists="replace",index= False)